name: Static Analysis

on: 
  pull_request:
  workflow_dispatch:

env:
  FEATURES: -DUSE_VTK=OFF -DBUILD_GPL_PLUGINS=ON -DWITH_COORDGEN=OFF
  BUILD_TYPE: RelWithDebInfo
  CLAZY_VERSION: 1.8

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Ubuntu Analysis",
            os: ubuntu-20.04,
            cc: "clang", cxx: "clang++",
            cmake_flags: "-G Ninja -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DUSE_SYSTEM_LIBXML2=ON -USE_SYSTEM_ZLIB=ON",
            cpack: "",
          }

    steps:

    - name: Install Dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get -qq update
        sudo apt-get -qq install ninja-build bear libeigen3-dev libboost-all-dev libglew-dev libxml2-dev qt5-default libqt5x11extras5-dev libqt5svg5-dev
        sudo apt-get -qq install clang-tidy

    - name: Checkout openchemistry
      uses: actions/checkout@v3
      with:
        repository: openchemistry/openchemistry
        submodules: recursive

    - name: Checkout avogadroapp
      uses: actions/checkout@v3
      with:
        repository: openchemistry/avogadroapp
        path: avogadroapp

    - name: Checkout avogadrolibs
      uses: actions/checkout@v3
      with:
        path: avogadrolibs

    - name: Configure
      run: |
        if [ ! -d "${{ runner.workspace }}/build" ]; then mkdir "${{ runner.workspace }}/build"; fi
        cd "${{ runner.workspace }}/build"
        CC=${{matrix.config.cc}} CXX=${{matrix.config.cxx}} cmake $GITHUB_WORKSPACE ${{env.FEATURES}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ${{matrix.config.cmake_flags}}
      shell: bash

    - name: Build
      run: |
        CC=${{matrix.config.cc}} CXX=${{matrix.config.cxx}} ninja
        # only re-compile avogadrolibs
        (cd avogadrolibs; ninja clean)
        bear ninja
      shell: bash
      working-directory: ${{ runner.workspace }}/build
        
    - name: Create results directory
      run: |
        mkdir clang-tidy-result
    
    - name: Analyze
      run: |
        git diff -U0 HEAD^ | clang-tidy-diff -p1 -path ../build -export-fixes ../clang-tidy-result/fixes.yml
      working-directory: ${{ runner.workspace }}/avogadrolibs
    
    - name: Save PR metadata
      run: |
        echo ${{ github.event.number }} > clang-tidy-result/pr-id.txt
        echo ${{ github.event.pull_request.head.repo.full_name }} > clang-tidy-result/pr-head-repo.txt
        echo ${{ github.event.pull_request.head.ref }} > clang-tidy-result/pr-head-ref.txt
    
    - uses: actions/upload-artifact@v3
      with:
        name: clang-tidy-result
        path: clang-tidy-result/
        
    - name: Setup tmate session
      if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3
