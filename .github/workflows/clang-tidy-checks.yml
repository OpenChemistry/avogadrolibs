name: clang-tidy check

on: 
  pull_request:
    paths:
    - 'avogadro/**.cpp'
    - 'avogadro/**.h'
  push:
    paths:
    - 'avogadro/**.cpp'
    - 'avogadro/**.h'

env:
  BUILD_TYPE: RelWithDebInfo
  QT_VERSION: 5.12.10
  FEATURES: -DBUILD_GPL_PLUGINS=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=1
  CMAKE_EXPORT_COMPILE_COMMANDS: ON

jobs:
  build:
    name: ${{ matrix.buildname }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            buildname: 'clang-tidy'
            cc: clang
            cxx: clang++
            cmake_flags: '-G Ninja -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DUSE_SYSTEM_LIBXML2=ON -USE_SYSTEM_ZLIB=ON'

    steps:

    - name: Install Dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get -qq update
        sudo apt-get -qq install ninja-build bear libeigen3-dev libboost-all-dev libglew-dev libxml2-dev qt5-default libqt5x11extras5-dev

    - name: Checkout openchemistry
      uses: actions/checkout@v2
      with:
        repository: openchemistry/openchemistry
        submodules: recursive

    - name: Checkout avogadroapp
      uses: actions/checkout@v2
      with:
        repository: openchemistry/avogadroapp
        path: avogadroapp

    - name: Checkout avogadrolibs
      uses: actions/checkout@v2
      with:
        path: avogadrolibs

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{matrix.os}}-qt-${{env.QT_VERSION}}-cache

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
        version: ${{ env.QT_VERSION }}

    - name: Configure
      run: |
        mkdir build
        cd build
        CC=clang CXX=clang++ CMAKE_EXPORT_COMPILE_COMMANDS=ON cmake .. ${{env.FEATURES}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ${{matrix.cmake_flags}} 
      shell: bash

    - name: Build
      # intercept build commands to get the JSON database
      shell: bash
      working-directory: build
      run: |
        CC=clang CXX=clang++ bear ninja

    - name: Check C++ changes with clang-tidy
      id: static_analysis
      working-directory: build
      run : |
        sudo apt-get -qq install clang-tidy-11
        python3 ../avogadrolibs/scripts/clang-tidy-review.py --repo=${{ github.repository }} --token=${{ github.token }} --${{ github.event.pull_request.number }}

#    - name: Tmate debugging
#      if: always()
#      uses: mxschmitt/action-tmate@v3.5

    - name: Passed C++ clang-tidy checks
      if: steps.static_analysis.outputs.total_comments > 0
      run: exit 1
