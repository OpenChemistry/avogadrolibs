find_package(Eigen3 REQUIRED)
# Add as "system headers" to avoid warnings generated by them with
# compilers that support that notion.
include_directories(SYSTEM ${EIGEN3_INCLUDE_DIR})

find_package(OpenGL REQUIRED)
find_package(GLEW REQUIRED)
include_directories(SYSTEM ${OPENGL_INCLUDE_DIR} ${GLEW_INCLUDE_DIRS})
if(WIN32)
  add_definitions(-DGLEW_STATIC)
endif()

set(HEADERS
  avogadrogl.h
  bufferobject.h
  camera.h
  glrenderer.h
  primitive.h
  scene.h
  shader.h
  shaderprogram.h
)

set(SOURCES
  bufferobject.cpp
  camera.cpp
  glrenderer.cpp
  scene.cpp
  shader.cpp
  shaderprogram.cpp
)

set(shader_files
  "cylinders_fs.glsl"
  "cylinders_vs.glsl"
  "spheres_fs.glsl"
  "spheres_vs.glsl"
)
foreach(file ${shader_files})
  get_filename_component(file_we ${file} NAME_WE)
  set(src  ${CMAKE_CURRENT_SOURCE_DIR}/${file})
  set(resh ${CMAKE_CURRENT_BINARY_DIR}/${file_we}.h)
  list(APPEND shader_h_files ${resh})
  message("Adding ${file} to encoder... ${src} ${resh} ${file_we}")
  add_custom_command(
    OUTPUT ${resh}
    DEPENDS ${src} encodefile
    COMMAND encodefile
    ARGS ${src} ${resh} ${file_we}
    COMMENT "Encoding ${src}"
    )
endforeach()

avogadro_add_library(AvogadroRendering ${HEADERS} ${SOURCES} ${shader_h_files})
target_link_libraries(AvogadroRendering
  ${GLEW_LIBRARY}
  ${OPENGL_LIBRARIES})
