find_package(Eigen3 REQUIRED)
# Add as "system headers" to avoid warnings generated by them with
# compilers that support that notion.
include_directories(SYSTEM ${EIGEN3_INCLUDE_DIR})

#Find libspg
find_package(SymSPG REQUIRED)
include_directories(SYSTEM ${SymSPG_INCLUDE_DIR})


# Check if we need extra include directories for C++11 features.
if(AvogadroLibs_NEEDS_BOOST)
  include_directories(SYSTEM ${AvogadroLibs_MUTEX_INCLUDE_DIRS})
endif()

# configure the version header
configure_file("${PROJECT_SOURCE_DIR}/cmake/version.h.in"
  "${CMAKE_CURRENT_BINARY_DIR}/version.h")

set(HEADERS
  color3f.h
  array.h
  atom.h
  atomtyper.h
  atomtyper-inline.h
  avogadrocore.h
  avospglib.h
  basisset.h
  bond.h
  coordinateset.h
  coordinateblockgenerator.h
  crystaltools.h
  cube.h
  elements.h
  gaussianset.h
  gaussiansettools.h
  graph.h
  hydrogentools.h
  matrix.h
  mesh.h
  molecule.h
  mutex.h
  nameatomtyper.h
  ringperceiver.h
  slaterset.h
  slatersettools.h
  spacegroups.h
  symbolatomtyper.h
  types.h
  unitcell.h
  utilities.h
  variant.h
  variant-inline.h
  variantmap.h
  vector.h
  "${CMAKE_CURRENT_BINARY_DIR}/version.h"
)

set(SOURCES
  avospglib.cpp
  coordinateblockgenerator.cpp
  crystaltools.cpp
  cube.cpp
  elements.cpp
  gaussianset.cpp
  gaussiansettools.cpp
  graph.cpp
  hydrogentools.cpp
  mesh.cpp
  mdlvalence_p.h
  molecule.cpp
  mutex.cpp
  nameatomtyper.cpp
  ringperceiver.cpp
  slaterset.cpp
  slatersettools.cpp
  spacegroups.cpp
  symbolatomtyper.cpp
  unitcell.cpp
  variantmap.cpp
  version.cpp
)

avogadro_add_library(AvogadroCore ${HEADERS} ${SOURCES})

target_link_libraries(AvogadroCore ${SymSPG_LIBRARY})

# Additional libraries and compiler definitions necessary when using Boost to
# replace C++11.
if(AvogadroLibs_NEEDS_BOOST)
  target_link_libraries(AvogadroCore
    LINK_PRIVATE ${AvogadroLibs_MUTEX_BOOST_LIBRARIES})
  add_definitions(${AvogadroLibs_BOOST_DEFINITIONS})
endif()
