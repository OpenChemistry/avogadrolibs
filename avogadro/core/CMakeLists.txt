find_package(Eigen3 REQUIRED)
# Add as "system headers" to avoid warnings generated by them with
# compilers that support that notion.
include_directories(SYSTEM ${EIGEN3_INCLUDE_DIR})

# Test for some C++11 language features.
include(DetermineMutex)
determine_mutex(MUTEX_TYPE MUTEX_TYPE_HEADER)
# Currently not installed, for use in Avogadro internal libraries only.
configure_file("${PROJECT_SOURCE_DIR}/cmake/mutex.h.in"
  "${CMAKE_CURRENT_BINARY_DIR}/mutex_p.h" @ONLY)
include(DetermineMemory)
determine_memory_ptrs(MEMORY_TYPEDEFS MEMORY_TYPE_INCLUDES)
# Currently not installed, for use in Avogadro internal libraries only.
configure_file("${PROJECT_SOURCE_DIR}/cmake/memory.h.in"
  "${CMAKE_CURRENT_BINARY_DIR}/memory_p.h" @ONLY)

if(MUTEX_TYPE_BOOST_REQUIRED)
  message(STATUS
    "Using Boost to replace some C++11 features that are not available.")
  find_package(Boost COMPONENTS thread system)
  set(AvogadroLibs_NEEDS_BOOST "thread;system" CACHE INTERNAL
    "What Boost libraries we require")
  set(AvogadroLibs_BOOST_INCLUDE_DIRS ${Boost_INCLUDE_DIRS} PARENT_SCOPE)
  include_directories(SYSTEM ${Boost_INCLUDE_DIRS})
endif()

set(HEADERS
  array.h
  atom.h
  avogadrocore.h
  bond.h
  coordinateset.h
  elements.h
  graph.h
  matrix.h
  molecule.h
  ringperceiver.h
  variant.h
  variant-inline.h
  variantmap.h
  vector.h
)

set(SOURCES
  atom.cpp
  bond.cpp
  coordinateset.cpp
  elements.cpp
  graph.cpp
  molecule.cpp
  ringperceiver.cpp
  variantmap.cpp
)

avogadro_add_library(AvogadroCore ${HEADERS} ${SOURCES})
if(AvogadroLibs_NEEDS_BOOST)
  # These libraries will go in our interface libraries.
  target_link_libraries(AvogadroCore ${Boost_LIBRARIES})
endif()
