find_package(Eigen3 REQUIRED)
# Add as "system headers" to avoid warnings generated by them with
# compilers that support that notion.
include_directories(SYSTEM ${EIGEN3_INCLUDE_DIR})

find_package(Qt4 COMPONENTS QtCore QtGui QtOpenGL REQUIRED)
include_directories(SYSTEM ${QT_INCLUDES})
add_definitions(${QT_DEFINITIONS})

set(HEADERS
  pluginmanager.h
  sceneplugin.h
)

set(SOURCES
  pluginmanager.cpp
  sceneplugin.cpp
)

qt4_wrap_cpp(moc_srcs
  pluginmanager.h
  sceneplugin.h
)

add_library(AvogadroQtGui ${HEADERS} ${SOURCES} ${moc_srcs})
target_link_libraries(AvogadroQtGui
  AvogadroRendering
  ${QT_QTCORE_LIBRARY}
  ${QT_QTGUI_LIBRARY})

# Generate an export header for the AvogadroCore library. This handles symbol
# visibility on all platforms using functionality added in CMake 2.8.6.
include(GenerateExportHeader)
generate_export_header(AvogadroQtGui
  EXPORT_FILE_NAME avogadroqtguiexport.h)
list(APPEND HEADERS "${CMAKE_CURRENT_BINARY_DIR}/avogadroqtguiexport.h")
include_directories(${CMAKE_CURRENT_BINARY_DIR})
add_compiler_export_flags(avogadro_export_flags)
set_property(TARGET AvogadroQtGui APPEND
  PROPERTY COMPILE_FLAGS ${avogadro_export_flags})
# Install the library and headers.
install(FILES ${HEADERS} DESTINATION "${INSTALL_INCLUDE_DIR}/avogadro/qtgui")
install(TARGETS AvogadroQtGui
  EXPORT "AvogadroLibsTargets"
  RUNTIME DESTINATION "${INSTALL_RUNTIME_DIR}"
  LIBRARY DESTINATION "${INSTALL_LIBRARY_DIR}"
  ARCHIVE DESTINATION "${INSTALL_ARCHIVE_DIR}")
