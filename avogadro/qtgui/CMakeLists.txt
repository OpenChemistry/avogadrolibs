# Pull in MoleQueue
find_package(MoleQueue REQUIRED NO_MODULE)
include_directories(${MoleQueue_INCLUDE_DIRS})

find_package(Eigen3 REQUIRED)
# Add as "system headers" to avoid warnings generated by them with
# compilers that support that notion.
include_directories(SYSTEM ${EIGEN3_INCLUDE_DIR})

find_package(Qt4 COMPONENTS QtCore QtGui QtOpenGL REQUIRED)
include_directories(SYSTEM ${QT_INCLUDES})
add_definitions(${QT_DEFINITIONS})

# Default shebang lines for interpreted scripts:
# Python 2.x. Default "#!/usr/bin/env python" or python 2.x interpretor in PATH.
set(PYTHON2_EXECUTABLE "/usr/bin/env python")
find_package(PythonInterp 2)
if(PYTHON_EXECUTABLE)
  set(PYTHON2_EXECUTABLE "${PYTHON_EXECUTABLE}")
endif()
set(QUANTUMINPUT_PYTHON2_SHEBANG "#!${PYTHON2_EXECUTABLE}"
  CACHE STRING "Shebang line (e.g. \"#!/usr/bin/...\") for python 2.x scripts.")
mark_as_advanced(QUANTUMINPUT_PYTHON2_SHEBANG)

file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/quantumpython.h.in"
"namespace Avogadro {
static const char *pythonInterpreterPath = \"${PYTHON2_EXECUTABLE}\";
}
")
configure_file("${CMAKE_CURRENT_BINARY_DIR}/quantumpython.h.in"
  "${CMAKE_CURRENT_BINARY_DIR}/quantumpython.h")

set(HEADERS
  color3f.h
  elementtranslator.h
  extensionplugin.h
  filebrowsewidget.h
  generichighlighter.h
  inputgenerator.h
  inputgeneratordialog.h
  inputgeneratorwidget.h
  mesh.h
  meshgenerator.h
  molecule.h
  molequeuedialog.h
  molequeuemanager.h
  molequeuequeuelistmodel.h
  molequeuewidget.h
  periodictableview.h
  sceneplugin.h
  scenepluginmodel.h
  toolplugin.h
)

set(SOURCES
  elementdetail_p.cpp
  elementitem_p.cpp
  elementtranslator.cpp
  extensionplugin.cpp
  filebrowsewidget.cpp
  generichighlighter.cpp
  inputgenerator.cpp
  inputgeneratordialog.cpp
  inputgeneratorwidget.cpp
  mesh.cpp
  meshgenerator.cpp
  molecule.cpp
  molequeuedialog.cpp
  molequeuemanager.cpp
  molequeuequeuelistmodel.cpp
  molequeuewidget.cpp
  periodictablescene_p.cpp
  periodictableview.cpp
  sceneplugin.cpp
  scenepluginmodel.cpp
  toolplugin.cpp
)

set(UIS
  inputgeneratordialog.ui
  inputgeneratorwidget.ui
  molequeuedialog.ui
  molequeuewidget.ui
)
qt4_wrap_ui(UI_SOURCES ${UIS})
list(APPEND SOURCES ${UI_SOURCES})

avogadro_add_library(AvogadroQtGui ${HEADERS} ${SOURCES})
target_link_libraries(AvogadroQtGui
  AvogadroIO
  MoleQueueClient
  ${QT_QTCORE_LIBRARY}
  ${QT_QTGUI_LIBRARY})
